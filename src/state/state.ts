import {v1} from "uuid";
import {ActionsType} from "./ActionCreater";



type PostType = {
    id: string;
    like: number;
    img: string;
    text: string;
};

type MessageType = {
    id: string;
    name: string;
    img: string;
    text: string;
};

// –¢–∏–ø –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
type GlobalStateType = {
    pageProfile: {
        post: PostType[];
        newPostText: string;
    };
    message: MessageType[];
};

// –¢–∏–ø –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ rerenderEntireTree
type CallSubscribe = () => void;



// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –¥–ª—è Store
type StoreType = {
    _callSubscribe: CallSubscribe;
    _state: GlobalStateType;
    getState: () => GlobalStateType;
    addPost: () => void;
    updateNewPostText: (value: string) => void;
    dispatch:(action: ActionsType) => void
    subscribe: (observer: CallSubscribe) => void;
};

export const store: StoreType = {
    _callSubscribe() {
        console.log('state change')
    },
    _state: {
        pageProfile: {
            post: [
                {
                    id: v1(),
                    like: 1000,
                    img: 'http://tinyurl.com/yfm49k2p',
                    text: '–ü—Ä–∏–≤–µ—Ç! üé® –î–µ–ª—é—Å—å –ª–æ–≥–æ—Ç–∏–ø–æ–º –¥–ª—è –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ñ–æ–Ω–¥–∞. –í–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –¥–∏–∑–∞–π–Ω,' +
                        ' –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–¥–µ—Ä–∂–∏—Ç –Ω–∞—à–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ. ‚ù§Ô∏è –ù–∞–¥–µ—é—Å—å, –æ–Ω –ø—Ä–∏–≤–ª–µ—á–µ—Ç –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –≤–∞–∂–Ω–æ–º—É –ø—Ä–æ–µ–∫—Ç—É!' +
                        ' #–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π–¥–∏–∑–∞–π–Ω #–ª–æ–≥–æ—Ç–∏–ø #–±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å'
                },
                {
                    id: v1(),
                    like: 100,
                    img: 'http://tinyurl.com/yfm49k2p',
                    text: '–ò—Å–∫—É—Å—Å—Ç–≤–æ –≤ –∫–∞–∂–¥–æ–π –¥–µ—Ç–∞–ª–∏! ‚ú® –°–æ–∑–¥–∞—é —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –¥–∏–∑–∞–π–Ω—ã, –≤–¥–æ—Ö–Ω–æ–≤–ª—è—è—Å—å –º–∏—Ä–æ–º –≤–æ–∫—Ä—É–≥. –ü–æ–≥—Ä—É–∑–∏—Ç–µ—Å—å –≤ –∫—Ä–µ–∞—Ç–∏–≤!' +
                        ' #–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π–¥–∏–∑–∞–π–Ω #—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ'
                },
            ],
            newPostText: '',
        },


        message: [
            {
                id: v1(),
                name: 'Artur',
                img: 'https://clck.ru/37dCXs',
                text: '–ü—Ä–∏–≤–µ—Ç, –î–∏–ª—è—Ä–∞'
            },
            {
                id: v1(),
                name: 'Dilyara',
                img: 'http://tinyurl.com/yfm49k2p',
                text: '–ü—Ä–∏–≤–µ—Ç, –ê—Ä—Ç—É—Ä'
            },

        ]
    },
    getState() {
        return this._state
    },
    addPost() {
        let newPost = {
            id: v1(),
            like: 0,
            text: this._state.pageProfile.newPostText,
            img: 'http://tinyurl.com/yfm49k2p'

        }
        this._state.pageProfile.post.push(newPost)
        this._callSubscribe()
    },
    updateNewPostText(value: string) {
        this._state.pageProfile.newPostText = value
        this._callSubscribe()
    },
    dispatch(action: ActionsType) {
        if (action.type === 'ADD-POST'){
            let newPost = {
                id: v1(),
                like: 0,
                text: this._state.pageProfile.newPostText,
                img: 'http://tinyurl.com/yfm49k2p'

            }
            this._state.pageProfile.post.push(newPost)
            this.updateNewPostText('')
            this._callSubscribe()
        }else if (action.type === 'UPDATE-NEW-POST-TEXT'){
            this._state.pageProfile.newPostText = action.value
            this._callSubscribe()
        }
    },
    subscribe(observer: any) {
        this._callSubscribe = observer
    }
}




